Базовые команды - https://github.com/andreiled/mipt-cs-4sem/wiki/%D0%9F%D0%BE%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%D0%B0%D1%8F-%D0%B8%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%86%D0%B8%D1%8F-%D0%BF%D0%BE-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B5-%D1%81-git-%D0%B8-github-%D0%B4%D0%BB%D1%8F-%D1%81%D1%82%D1%83%D0%B4%D0%B5%D0%BD%D1%82%D0%BE%D0%B2

Хороший учебник по GitHub на русском - https://git-scm.com/book/ru/v1/%D0%92%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-Git-%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B-%D0%B2%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B8-%D1%81%D0%BB%D0%B8%D1%8F%D0%BD%D0%B8%D1%8F

Википедия - https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0_%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F_%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8

Кратко: 
master - продуктовая ветка, 
branch создаются, когда нужно пофиксить ошибку или сделать доработку функционала. После доработки branch сливается с master
Всё, что вам нужно сделать, — перейти на ту ветку, в которую вы хотите слить свои изменения, и выполнить команду git merg

$ git checkout master
$ git merg
или
$ git merge hotfix

после слияния ветка hotfix уже не нужна и ее можно удалить
$ git branch -d hotfix

Воспользовавшись командой git status можно узнать, на какой ветке (branch) репозитория вы сейчас находитесь, 
какие изменения присутствуют в вашей рабочей копии и другую информацию.
$ git status

# создание новой ветки 
$ git branch iss53

# переключение (локального репозитория) на ветку 'iss53'
$ git checkout iss53

После того, как были выполнены нужные локальные коммиты, 
изменения можно загрузить в удаленный репозиторий с помощью команды 
$ git push origin master

Переименование файлов
$ git mv file_from file_to
