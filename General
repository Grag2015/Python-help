s="dddd"
dim(s) - список методов, применимых к данному типу

a.__dict__ - атрибуты объекта а

Объект есть любая сущность в python (функция, число, строка… словом, всё).
Класс это объект, чьим типом является type (тип можно подсмотреть в атрибуте __class__).
Экземпляр некоторого класса A — это объект, у которого в атрибуте __class__ есть ссылка на класс A.

# можно в блок Синтаксис или Управляющие конструкции
# Переключение между функциями по номеру, switch по функциям
# define the function blocks
def zero():
    print "You typed zero.\n"

def sqr():
    print "n is a perfect square\n"

def even():
    print "n is an even number\n"

def prime():
    print "n is a prime number\n"

# map the inputs to the function blocks
options = {0 : zero,
           1 : sqr,
           4 : sqr,
           9 : sqr,
           2 : even,
           3 : prime,
           5 : prime,
           7 : prime,
}
Then the equivalent switch block is invoked:

options[num]()
This begins to fall apart if you heavily depend on fall through.

Что происходит при импортировании моего модуля (по моим наблюдениям) - создается объект класса имя_моего_модуля, глобальные переменные - атрибуты, функции модуля - методы классы. И при вызове функций, которые изменяют глобальные переменные (т.е. атрибуты объекта), изменяется состояние объекта, поэтому вызов одной ф-и несколько раз с одинаковыми переменными может дать различные результаты. 

Глобальные переменные, используемые в какой-нибудь функции лучше объявлять явно с флагом global

